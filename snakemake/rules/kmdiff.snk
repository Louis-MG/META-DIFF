######## RULE FILE FOR KMDIFF : COUNT THEN DIFF

########### count
rule kmdiff_count:
    input:
        config["fof"]
    output:
        config["project_path"] + config['experiment_name'] + "/kmdiff_output/run_infos.txt"
    threads: config["threads"]
    params:
        output_folder = config["project_path"] + config['experiment_name'] + "/kmdiff_output/",
        partitions = config["partitions"]
    log:
        stdout = config["project_path"] + config['experiment_name']+ "/logs/kmdiff_count.stdout",
        stderr = config["project_path"] + config['experiment_name']+ "/logs/kmdiff_counts.stderr"
    conda:
        "../../env/kmdiff.yaml"
    shell:
        """
        ulimit -n 10000
        rm -d {params.output_folder}
        kmdiff count -f {input} -d {params.output_folder} -t {threads} --nb-partitions {params.partitions} > {log.stdout} 2> {log.stderr}
        """

########### diff

rule kmdiff_diff:
    input:
        test_file = config["project_path"] + config['experiment_name'] + "/kmdiff_output/run_infos.txt",
        fof = config["fof"]
    output:
        expand(config["project_path"] + config['experiment_name'] + "/kmdiff_output/{prefix}_kmers.fasta", prefix = ["case", "control"])
    params:
        output_folder = config["project_path"] + config['experiment_name'] + "/kmdiff_output/"
    threads: config["threads"]
    log:
        stdout = config["project_path"] + config['experiment_name'] + "/logs/kmdiff_diff.stdout",
        stderr = config["project_path"] + config['experiment_name'] + "/logs/kmdiff_diff.stderr"
    conda:
        "../../env/kmdiff.yaml"
    shell:
        """
        ulimit -n 10000
        nb_control=$(grep -c -F 'case' {input.fof})
        nb_case=$(grep -c -F 'control' {input.fof})
        kmdiff diff --km-run {params.output_folder} -t {threads} --output-dir {params.output_folder} --nb-controls "$nb_control" \
        --nb-cases "$nb_case" --save-sk --correction "benjamini" > {log.stdout} 2> {log.stderr}
        """



