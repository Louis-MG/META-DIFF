######## RULE FILE FOR KMDIFF : COUNT THEN DIFF

########### count
rule kmdiff_count:
    input:
        config["fof"]
    output:
        config["project_path"] + "pipeline_output/kmdiff_output/run_infos.txt"
    threads: 120
    params:
        output_folder = config["project_path"] + "pipeline_output/kmdiff_output/"
    conda:
        config["src_path"] + "/env/kmdiff.yaml"
    shell:
        """
        kmdiff count -i {input} -o {params.output_folder} -t {threads} --nb-partitions 40
        """

########### diff

rule kmdiff_diff:
    input:
        test_file = config["project_path"] + "pipeline_output/kmdiff_output/run_infos.txt",
	fof = config['fof']
    output:
        expand(config["project_path"] + "pipeline_output/kmdiff_output/{prefix}_kmers.fasta", prefix = ["case", "control"])
    params:
        output_folder = config["project_path"] + "pipeline_output/kmdiff_output/"
    threads: 120
    conda:
        config["src_path"] + "/env/kmdiff.yaml"
    shell:
        """
        nb_control=$(grep -c -F 'case' {input.fof})
        nb_case=$(grep -c -F 'control' {input.fof})
        kmdiff diff --km-run {params.output_folder} -t {threads} --output-dir {params.output_folder} --nb-controls "$nb_control" --nb-cases "$nb_case" --save-sk --correction "benjamini"
        """


rule kmdiff_dump:
    input:        
        expand(config["project_path"] + "pipeline_output/kmdiff_output/{prefix}_kmers.fasta", prefix = ["case", "control"])
    output:
        config["project_path"] + "pipeline_output/kmdiff_output/significant_kmers_matrix.txt"
    params:
        input_folder = config["project_path"] + "pipeline_output/kmdiff_output/"
    conda :
        config['src_path'] + "/env/kmtricks.yaml"
    shell:
        """
        kmtricks aggregate --run-dir {params.input_folder}/positive_kmer_matrix --matrix kmer --cpr-in > {output}
        """


