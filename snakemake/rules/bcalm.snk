############# BUILD UNITIGS

rule bcalm:
    input:
        config["project_path"] + "pipeline_output/kmdiff_output/{condition}_kmers.fasta"
    output:
        config["project_path"] + "pipeline_output/kmdiff_output/{condition}_kmers.unitigs.fa"
    params:
        memory = config["bcalm_memory"],
        outfile = config["project_path"] + "pipeline_output/kmdiff_output/{condition}_kmers"
    threads: config["threads"]
    log:
        stdout = config["project_path"] + "/pipeline_output/logs/bcalm_{condition}.stdout",
        stderr = config["project_path"] + "/pipeline_output/logs/bcalm_{condition}.stderr"
    conda :
        "../../env/bcalm.yaml"
    shell:
        """
        if [ ! -s {input} ]
        then
            echo "No differentially abundant kmers for {wildcards.condition}" > {log.stdout}
            touch {output}
            exit 0
        else
            bcalm -in {input} -out {params.outfile} -nb-cores {threads} -abundance-min 1 -max-memory {params.memory} >> {log.stdout} 2> {log.stderr}
        fi
        """
