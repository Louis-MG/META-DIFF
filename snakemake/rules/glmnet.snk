rule glmnet_class:
    input:
        matrix = config["project_path"] + "pipeline_output/glmnet/top_unknown_matrix.txt",
        fof = config["fof"] 
    output:
        config["project_path"] + "pipeline_output/glmnet/best_model.txt", config["project_path"] + "pipeline_output/glmnet/heatmap.pdf", config["project_path"] + "pipeline_output/glmnet/accuracy.txt", config["project_path"] + "pipeline_output/glmnet/matrix.tsv"
    threads: config["threads"]
    params:
        output_folder = config["project_path"] + "pipeline_output/glmnet/",
        split = 0.75,
        script_path = "scripts/elasticNet_and_heatmap.R"
    conda:
        "../../env/glmnet.yaml"
    shell:
        """
        nb_control=$(grep -c -F "case" {input.fof})
        nb_case=$(grep -c -F "control" {input.fof})
        Rscript {params.script_path} -i {input.matrix} -t {threads} --case "$nb_case" --control "$nb_control" --output {params.output_folder} -y {params.split}
        """
